==========================================================================================
% sigmoid.m

exp_minus_z = exp(-z)
g = 1./(1+ exp_minus_z)

==========================================================================================
% costFunction.m

theta_X =  X*theta
h_theta_X = sigmoid(theta_X)
sum_J = y'*log(h_theta_X) + (ones(1,m) - y')*log(ones(m,1) - h_theta_X )
J = -1/m*sum_J
grad = (1/m.*((h_theta_X - y)'*X))'

==========================================================================================
% predict.m

theta_X =  X*theta
h_theta_X = sigmoid(theta_X)
p = round(h_theta_X)

==========================================================================================
% costFunctionReg.m

theta_X =  X*theta
h_theta_X = sigmoid(theta_X)

Original_J = -1/m*(y'*log(h_theta_X) + (ones(1,m) - y')*log(ones(m,1) - h_theta_X ))
Punishment_J = lambda/(2*m)* (theta'*theta - theta(1)*theta(1))
J = Original_J+Punishment_J

grad_original = (1/m.*((h_theta_X - y)'*X))'
grad_theta0 = grad_original(1)
grad = (1/m.*((h_theta_X - y)'*X))' + lambda/m*theta
grad(1) = grad_theta0

==========================================================================================
